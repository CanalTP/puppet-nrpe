#################################################
##### THIS FILE HAS BEEN GENERATED BY PUPPET ####
#################################################

# Plugins standarts dans <%= @config_plugins_dir %>
# Plugins additionnels dans <%= @config_plugins_dir %>/contrib (au cas ou on modifie)

command[check_load]=<%= @config_plugins_dir %>/check_load --warning=$ARG1$ --critical=$ARG2$
command[check_mem]=<%= @config_plugins_dir %>/contrib/check_mem.pl -u -w $ARG1$ -c $ARG2$ -C

# seuils en pourcentage restants (le % est déjà défini ici)
command[check_swap]=<%= @config_plugins_dir %>/check_swap --warning=$ARG1$% --critical=$ARG2$%
# exclude all virtual (udev, sysfs, etc..) and remote fs (nfs, cifs)
command[check_all_disks]=<%= @config_plugins_dir %>/check_disk --warning=$ARG1$% --critical=$ARG2$% --iwarning=$ARG3$% --icritical=$ARG4$% --errors-only -A -I '/var/lib/docker/*' --exclude-type=tmpfs --exclude-type=udev --exclude-type=proc --exclude-type=sysfs --exclude-type=cifs --exclude-type=nfs --exclude-type=nfs4 --exclude-type=autofs

command[check_process]=<%= @config_plugins_dir %>/check_procs --critical=$ARG1$:$ARG2$ --command=$ARG3$
command[check_process_string]=<%= @config_plugins_dir %>/check_procs --critical=$ARG1$:$ARG2$ --argument-array='$ARG3$' -u $ARG4$
command[check_ntp]=<%= @config_plugins_dir %>/check_ntp_time --hostname=$ARG1$ -4
command[check_dns]=<%= @config_plugins_dir %>/check_dns --hostname=$ARG1$

# check pour worker/dispatcher
command[check_dispatcher]=<%= @config_plugins_dir %>/contrib/check_dispatcher.py
command[check_dispatcher_ignored]=<%= @config_plugins_dir %>/contrib/check_dispatcher_ignored.py
command[check_dispatcher_error]=<%= @config_plugins_dir %>/contrib/check_dispatcher_error.py
command[check_error_send]=<%= @config_plugins_dir %>/contrib/check_error_send.sh
command[check_send]=<%= @config_plugins_dir %>/contrib/check_send.sh
command[check_rapprochement]=<%= @config_plugins_dir %>/contrib/check_rapprochement.py
command[check_dispatcher_moteur]=<%= @config_plugins_dir %>/contrib/check_dispatcher_moteur.py --warning=$ARG1$ --critical=$ARG2$
command[check_dispatcher_loadMonitoring]=<%= @config_plugins_dir %>/contrib/check_dispatcher_loadMonitoring.py

# check pour Backoffice 
command[check_log_crons_tft2]=<%= @config_plugins_dir %>/contrib/check_log_crons_tft2.sh $ARG1$ "$ARG2$" $ARG3$

# check pour WebService 
command[check_tft2_webservice_sender]=<%= @config_plugins_dir %>/contrib/check_tft2_webservice_sender.py --file $ARG1$ --error $ARG2$

# MySQL
# - need a /etc/mysql/nagios.cnf with a username and password owned by nagios
#  (automatically deployed by puppet)
# - a dedicated read-only account in MySQL:
# mysql> CREATE USER nagios IDENTIFIED BY 'xxxx';
# mysql> FLUSH PRIVILEGES;
#
command[check_mysql]=<%= @config_plugins_dir %>/contrib/check_mysqld.pl --mysql-default-file=$ARG1$ -A $ARG2$

# MySQL, replication
# the script check_mysqld.pl use Rpl_status which is always set to NULL
# when replication is set, use the default check_mysql plugin instead
#
# mysql> GRANT REPLICATION CLIENT ON *.* TO 'nagios'@'%';
# mysql> FLUSH PRIVILEGES;
#
# ARG1 is the my.cnf password file
command[check_mysql_replication]=<%= @config_plugins_dir %>/contrib/check_mysql_replication.sh $ARG1$

#pgsql
command[check_pgsql]=<%= @config_plugins_dir %>/check_pgsql --hostname $ARG1$ --database $ARG2$ --logname $ARG3$ --password $ARG4$

# mailqueue
command[check_mailq]=<%= @config_plugins_dir %>/check_mailq --warning $ARG1$ --critical $ARG2$ --mailserver $ARG3$

# Navitia RT (Navitia2)
# Fusio updater (navimake)
command[check_navimake]=<%= @config_plugins_dir %>/contrib/check_navimake.sh

# bonding, report critical if no bond interface found
command[check_bonding]=<%= @config_plugins_dir %>/contrib/check_linux_bonding --no-bonding critical

# Dell OpenManage for M series blades
command[check_openmanage]=<%= @config_plugins_dir %>/contrib/check_openmanage

# Check pour sauvegarde equipement
command[check_backup_equipements]=<%= @config_plugins_dir %>/contrib/check_backup_equipements.sh

# check export sive
command[check_export_sive]=<%= @config_plugins_dir %>/contrib/check_export_sive.py

# check file age
command[check_file_age]=<%= @config_plugins_dir %>/contrib/check_file_age.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$

# check file age ed
command[check_file_age_ed]=<%= @config_plugins_dir %>/contrib/check_file_age_ed.sh $ARG1$ $ARG2$ $ARG3$

# check uptime
command[check_uptime]=<%= @config_plugins_dir %>/contrib/check_uptime.pl -w $ARG1$

# check cron_regie
command[check_synchro]=<%= @config_plugins_dir %>/contrib/check_synchro.sh

# check SAN multipath (UCS)
command[check_multipath]=<%= @config_plugins_dir %>/contrib/check_multipath.pl

# restart tomcat-sum
command[restart-sum]=<%= @config_plugins_dir %>/contrib/restart_tomcat-sum.sh $ARG1$ $ARG2$ $ARG3$

# return requests/min found on a logfile
command[check_log_requests]=<%= @config_plugins_dir %>/contrib/check_log_requests.sh $ARG1$

# return requests/min found on a logfile and filter on patern
command[check_log_requests_patern]=<%= @config_plugins_dir %>/contrib/req_minutes_paterne.sh $ARG1$ $ARG2$

# return total cpu usage
command[check_cpu]=<%= @config_plugins_dir %>/contrib/check_cpu.sh

# check activemq stats
# requires perl-libwww-perl (RHEL) / libwww-perl (Debian) package
command[check_activemq_watch]=<%= @config_plugins_dir %>/contrib/activemq_watch.pl -w $ARG1$ -c $ARG2$

# Check local syslog and find a random generated message on the logfile
command[check_syslog]=<%= @config_plugins_dir %>/contrib/check_syslog.pl --loghost=$ARG1$ --logfile=$ARG2$

# check local PGPool
command[check_pgpool]=<%= @config_plugins_dir %>/contrib/check_pgpool_2.pl -H 127.0.0.1 -u $ARG1$ -p $ARG2$

# check Elasticsearch cluster status
command[check_elasticsearch_cluster]=<%= @config_plugins_dir %>/contrib/check_elasticsearch_cluster.py

# check if logstash is filling lostash indexes in elasticsearch
command[check_logstash]=<%= @config_plugins_dir %>/contrib/check_logstash.py --rows $ARG1$

# check if supervisord services is running
command[check_supervisord]=<%= @config_plugins_dir %>/contrib/check_supervisord.py -p $ARG1$ -s $ARG2$

# check if supervisord services without projet is running
command[check_supervisord_service]=<%= @config_plugins_dir %>/contrib/check_supervisord_service.py -s $ARG1$

# check flux json in file
command[check_json]=<%= @config_plugins_dir %>/contrib/check_json.py -f $ARG1$ -k $ARG2$

# check for navitia2 for count requests by minutes
command[check_req_minutes]=<%= @config_plugins_dir %>/contrib/req_minutes.sh $ARG1$ 

# check for syslog for count requests by minutes
command[check_req_minutes_syslog]=<%= @config_plugins_dir %>/contrib/req_minutes_syslog.sh $ARG1$ 

# check for syslog for count requests by minutes
command[check_timetaken_GW_syslog]=<%= @config_plugins_dir %>/contrib/timetaken_GW_syslog.sh $ARG1$ 

# return cpu/memory usage for a process
command[check_cpu_mem_proc]=<%= @config_plugins_dir %>/contrib/check_cpu_proc.sh -p $ARG1$ -f $ARG2$ -w $ARG3$ -c $ARG4$ -m $ARG5$ -n $ARG6$

# check for keepalived vrrp status
command[check_keepalived]=<%= @config_plugins_dir %>/contrib/check_keepalived_vrrp.pl -a localhost -c $ARG1$

# Check http
command[check_http]=<%= @config_plugins_dir %>/check_http -H $ARG1$ -u $ARG2$ -w $ARG3$ -c $ARG4$

# Check https
command[check_https]=<%= @config_plugins_dir %>/check_http -H $ARG1$ -S -u $ARG2$ -w $ARG3$ -c $ARG4$

# Check certificate end date
command[check_certificate_end_date]=<%= @config_plugins_dir %>/contrib/check_certificate_enddate_file.sh $ARG1$

# Check supervisord by container
command[check_spam_supervisor]=<%= @config_plugins_dir %>/contrib/check_spam_supervisor.py -s $ARG1$ -c $ARG2$

######################################################
######               ACTIONS                   #######
######################################################

# Reload apache
command[action_reload_apache]=<%= @config_plugins_dir %>/contrib/action_reload_apache.sh $ARG1$ $ARG2$

# Check docker containers
command[check_docker_running_containers]=<%= @config_plugins_dir %>/contrib/check_docker.py --status running --connection $ARG1$ --containers $ARG2$

# Swarm cluster stuff 
command[check_swarm]=<%= @config_plugins_dir %>/contrib/check_swarm_health.sh $ARG1$ $ARG2$ 
command[check_swarm_localiter]=<%= @config_plugins_dir %>/contrib/check_swarm_service_localiter.sh $ARG1$
command[check_swarm_portainer]=<%= @config_plugins_dir %>/contrib/check_swarm_portainer.sh

# Check backup_mongo
command[check_mongo_backup]=<%= @config_plugins_dir %>/contrib/status_mongo_backup.sh

#Check sum configuration
command[check_sum_groovy]=<%= @config_plugins_dir %>/contrib/check-sum-cache.sh

# Check stat worker
command[check_stat_worker]=<%= @config_plugins_dir %>/contrib/check_stat_worker.py

# Check Tridion
command[check_odata]=/usr/lib64/nagios/plugins/contrib/check_tridion_odata.sh
command[check_deployer]=/usr/lib64/nagios/plugins/contrib/check_tridion_deployer.sh
